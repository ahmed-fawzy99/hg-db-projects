version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: laravel-app
        restart: on-failure
        tty: true
        user: www-data
        depends_on:
            db:
                condition: service_healthy
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: production
            DB_HOST: db

        working_dir: /var/www
        volumes:
            - ./docker-compose/php/prod.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network



    webserver:
        image: nginx:alpine
        container_name: nginx-webserver
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - app-network
        depends_on:
            - app

    db:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        ports:
            - "3306:3306"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app-network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 5s
            timeout: 3s
            retries: 5

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
